library(readxl)
Wage <- read_excel("Wage.xlsx")
View(Wage)
View(Wage)
View(Wage)
install.packages("dplyr")
install.packages("ggpubr")
library("dplyr")
library("ggpubr")
# imports
library("dplyr")
# imports
library("dplyr")
print(Wage)
Wage <- read_excel("Wage.xlsx")
print(Wage)
# Check assumption: normal distribution
set.seed(1234)
dplyr::sample_n(Wage, 10)
library("ggpubr")
# Check assumption: normal distribution
ggdensity(Wage$wage, main="Density of wages", xlab="Wages")
snpar
library("snpar")
install.packages("snpar")
# Check assumption: normal distribution
# After running the following line, we see that the distribution is bell-shaped.
ggdensity(Wage$heath_ins, main="Density of wages", xlab="Wages")
View(Wage)
# Check assumption: normal distribution
# After running the following line, we see that the distribution is bell-shaped.
ggdensity(Wage$health_ins, main="Density of wages", xlab="Wages")
wage
# Check assumption: normal distribution
# After running the following line, we see that the distribution is bell-shaped.
ggdensity(Wage$wage, main="Density of wages", xlab="Wages")
ggpubr
library("snpar")
library("randests")
install.packages("randests")
library("randests")
# Check assumption: randomness
difference.sign.test(Wage)
# Check assumption: randomness
RunsTest(Wage)
library("snpar")
install.packages("snpar")
library("snpar")
install.packages("snpar")
# Check assumption: randomness
RunsTest(Wage)
# Check assumption: randomness
runs.test(Wage)
if (!exists("runs.test", mode="function")) source("runs-test.r")
# Check assumption: randomness
runs.test(Wage)
# Check assumption: randomness
vector_wage <- c(Wage)
runs.test(vector_wage)
# Step 3: Finding the Test Statistic
wage_variance_with <- var(Wages)
# Step 3: Finding the Test Statistic
wage_variance_with <- var(Wage)
# H_0: Variable is normally distributed
# H_A: Variable is not normally distributed
# if p-val > .05, the assumption is satisfied
shapiro.test(Wage$wage)
